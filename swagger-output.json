{
  "swagger": "2.0",
  "info": {
    "description": "Awesome app for tracking your diet",
    "version": "1.0.0",
    "title": "REST API"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/foods/": {
      "get": {
        "tags": [
          "Foods"
        ],
        "description": "Get all Foods",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Food name",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Foods successfully obtained",
            "schema": {
              "$ref": "#/definitions/FoodResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Foods"
        ],
        "description": "Add new Food",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Food Body",
            "schema": {
              "$ref": "#/definitions/FoodEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success when adding new food",
            "schema": {
              "$ref": "#/definitions/FoodEntry"
            }
          }
        }
      }
    },
    "/api/foods/{id}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "description": "Get Food by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Food successfully obtained",
            "schema": {
              "$ref": "#/definitions/FoodEntry"
            }
          },
          "404": {
            "description": "No such item",
            "schema": {
              "$ref": "#/definitions/ErrorSearch"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Foods"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully",
            "schema": {
              "$ref": "#/definitions/FoodEntry"
            }
          },
          "404": {
            "description": "Item not found",
            "schema": {
              "$ref": "#/definitions/ErrorSearch"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Foods"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Food Body",
            "schema": {
              "$ref": "#/definitions/FoodEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Success when editing food",
            "schema": {
              "$ref": "#/definitions/FoodEntry"
            }
          },
          "404": {
            "description": "No such item",
            "schema": {
              "$ref": "#/definitions/ErrorSearch"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DiaryEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "39393993"
        },
        "date": {
          "type": "string",
          "example": "2021-01-01"
        },
        "foods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoodInDiary"
          }
        }
      },
      "required": [
        "date",
        "foods"
      ]
    },
    "DiaryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiaryEntry"
          }
        },
        "length": {
          "type": "number",
          "example": 10
        }
      }
    },
    "FoodInDiary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1"
        },
        "weight": {
          "type": "number",
          "example": 100
        },
        "mealType": {
          "type": "string",
          "example": "breakfast"
        }
      }
    },
    "FoodEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Orange"
        },
        "id": {
          "type": "string",
          "example": "39393993"
        },
        "caloriesPer100g": {
          "type": "number",
          "example": 100
        },
        "weight": {
          "type": "number",
          "example": 100
        },
        "nutriScore": {
          "type": "string",
          "example": "E"
        },
        "tags": {
          "type": "array",
          "example": [
            "1"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "weight"
      ]
    },
    "FoodResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoodEntry"
          }
        },
        "lenght": {
          "type": "number",
          "example": 10
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": ""
        },
        "userName": {
          "type": "string",
          "example": "John"
        },
        "email": {
          "type": "string",
          "example": "John@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "Fluid": {
      "type": "object",
      "properties": {}
    },
    "ErrorSearch": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Item not found"
        }
      }
    },
    "ErrorConflict": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Item already exists"
        }
      }
    }
  }
}